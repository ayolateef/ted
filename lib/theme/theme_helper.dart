import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:tedfinance_mobile/core/env/utils/size_utils.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  final Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  final Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: colorScheme.onPrimary,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(14.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.amberA700,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(5.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        side: const BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      floatingActionButtonTheme: const FloatingActionButtonThemeData(),
      dividerTheme: DividerThemeData(
        thickness: 6,
        space: 6,
        color: appTheme.blue5002,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.gray900,
          fontSize: 14.sp,
          fontFamily: 'Mukta',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray600,
          fontSize: 12.sp,
          fontFamily: 'Mukta',
          fontWeight: FontWeight.w400,
        ),
        displayLarge: TextStyle(
          color: const Color(0XFFFFFFFF),
          fontSize: 65.sp,
          fontFamily: 'Mukta',
          fontWeight: FontWeight.w700,
        ),
        displayMedium: TextStyle(
          color: const Color(0XFF18181B),
          fontSize: 40.sp,
          fontFamily: 'Mukta',
          fontWeight: FontWeight.w700,
        ),
        displaySmall: TextStyle(
          color: colorScheme.onPrimary,
          fontSize: 36.sp,
          fontFamily: 'Mukta',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: appTheme.gray5002,
          fontSize: 30.sp,
          fontFamily: 'Mukta',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.gray5004,
          fontSize: 24.sp,
          fontFamily: 'Mukta',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray900,
          fontSize: 12.sp,
          fontFamily: 'Mukta',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: appTheme.gray5002,
          fontSize: 20.sp,
          fontFamily: 'Mukta',
          fontWeight: FontWeight.w500,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray900,
          fontSize: 16.sp,
          fontFamily: 'Mukta',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray900,
          fontSize: 14.sp,
          fontFamily: 'Mukta',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static const primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF3438D7),
    primaryContainer: Color(0XFFE4E4E7),

    // Error colors
    errorContainer: Color(0XFFDC2626),
    onError: Color(0XFF313131),
    onErrorContainer: Color(0XFF170055),

    // On colors(text colors)
    onPrimary: Color(0XFFFFFFFF),
    onPrimaryContainer: Color(0XFF252370),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber300 => const Color(0XFFF2C94C);
  Color get amber30001 => const Color(0XFFFFC655);
  Color get amber400 => const Color(0XFFF7CB2E);
  Color get amberA700 => const Color.fromARGB(255, 229, 191, 116);

  // Black
  Color get black900 => const Color(0XFF000000);
  Color get black600 => const Color(0XFF2e2e30);

  // Blue
  Color get blue200 => const Color(0XFFA5B4FC);
  Color get blue50 => const Color(0XFFE0E7FF);
  Color get blue5001 => const Color(0XFFE0F2FE);
  Color get blue5002 => const Color(0XFFEEF2FF);
  Color get blue100 => const Color(0XFFC7D2FE);

  // BlueGray
  Color get blueGray100 => const Color(0XFFD9D9D9);
  Color get blueGray10001 => const Color(0XFFD4D4D8);
  Color get blueGray300 => const Color(0XFFA1A8BC);
  Color get blueGray50 => const Color(0XFFECEEF4);
  Color get blueGray600 => const Color(0XFF5A6D77);
  Color get blueGray700 => const Color(0XFF52525B);
  Color get blueGray900 => const Color(0XFF363636);
  Color get blueGray90001 => const Color(0XFF2B2B30);
  Color get blueGray90002 => const Color(0XFF343330);
  Color get blueGray90003 => const Color(0XFF292D32);

  // Cyan
  Color get cyan50 => const Color(0XFFCFFAFE);

  // DeepOrange
  Color get deepOrange50 => const Color(0XFFFEE2E2);

  // DeepPurple
  Color get deepPurple900 => const Color(0XFF270582);
  Color get deepPurple90001 => const Color(0XFF280683);
  Color get deepPurpleA100 => const Color(0XFFBC6FF1);
  Color get deepPurpleA200 => const Color(0XFF9931F5);
  Color get deepPurpleA20001 => const Color(0XFF9830F4);

  // Gray
  Color get gray100 => const Color(0XFFF4F4F5);
  Color get gray10001 => const Color(0XFFF0FDF4);
  Color get gray200 => const Color(0XFFEAEAEE);
  Color get gray50 => const Color(0XFFFBFBFB);
  Color get gray500 => const Color(0XFFA1A1AA);
  Color get gray5001 => const Color(0XFFFBFAFA);
  Color get gray5002 => const Color(0XFFFAFAFA);
  Color get gray5003 => const Color(0XFFF0F9FF);
  Color get gray5004 => const Color(0XFFFCFCFC);
  Color get gray600 => const Color(0XFF71717A);
  Color get gray700 => const Color(0XFF555555);
  Color get gray800 => const Color(0XFF3F3F46);
  Color get gray900 => const Color(0XFF18181B);
  Color get gray90001 => const Color(0XFF181818);
  Color get gray90002 => const Color(0XFF262626);
  Color get gray90003 => const Color(0XFF27272A);
  Color get gray90004 => const Color(0XFFF9F9F9);

  // Green
  Color get green400 => const Color(0XFF4ADE80);
  Color get green50 => const Color(0XFFDCFCE7);
  Color get green700 => const Color(0XFF16A34A);
  Color get green70001 => const Color(0XFF139543);
  Color get green70002 => const Color(0XFF139C46);
  Color get green800 => const Color(0XFF15803D);
  Color get greenA200 => const Color(0XFF86EFAC);
  Color get greenA700 => const Color(0XFF22C55E);
  Color get green500 => const Color(0XFF166534);

  // Indigo
  Color get indigo100 => const Color(0XFFC2CADC);
  Color get indigo400 => const Color(0XFF555BBB);
  Color get indigo40001 => const Color(0XFF5F66DB);
  Color get indigo500 => const Color(0XFF4840CA);
  Color get indigo50001 => const Color(0XFF453BCB);
  Color get indigo50002 => const Color(0XFF4338CA);
  Color get indigo800 => const Color(0XFF312E81);
  Color get indigo80001 => const Color(0XFF322E89);
  Color get indigoA100 => const Color(0XFF818CF8);
  Color get indigoA200 => const Color(0XFF6E76F6);
  Color get indigoA20001 => const Color(0XFF6366F1);
  Color get indigoA20002 => const Color(0XFF7179FF);
  Color get indigoA400 => const Color(0XFF4F46E5);
  Color get indigoMild => const Color(0XFF3538D7);

  // LightBlue
  Color get lightBlue600 => const Color(0XFF0EA5E9);
  Color get lightBlue700 => const Color(0XFF0284C7);
  Color get lighertBlue800 => const Color(0XFFE8FBFF);

  // Orange
  Color get orange50 => const Color(0XFFFFEEDF);
  Color get orangeA200 => const Color(0XFFF2994A);

  // Purple
  Color get purple900 => const Color(0XFF52057B);
  Color get gray20001 => const Color(0XFFEAEAEE);

  // Red
  Color get red200 => const Color(0XFFFCA5A5);
  Color get red300 => const Color(0XFFF87171);
  Color get red400 => const Color(0XFFD05757);
  Color get red50 => const Color(0XFFFFF4EB);
  Color get red500 => const Color(0XFFEF4444);
  Color get red5001 => const Color(0XFFFEF2F2);
  Color get red600 => const Color(0XFFDB353A);
  Color get red700 => const Color(0XFFDD1437);
  Color get red900 => const Color(0XFF991B1B);
  Color get red90001 => const Color(0XFF9A031E);
  Color get red90002 => const Color(0XFFB91C1C);
  Color get red90003 => const Color(0XFFA51C1C);
  Color get redA700 => const Color(0XFFE20010);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
